openstack-cluster:
  controlPlane:
    machineCount: 3

  nodeGroups:
    - name: default-md-0
      machineCount: 2

  nodeGroupDefaults:
    machineFlavor: l3.tiny

  cloudCredentialsSecretName: anish-cloud-credentials

  addons:
    ingress:
      enabled: true
      nginx:
        release:
          values:
            controller:
              service:
                loadBalancerIP: "130.246.211.60"
    monitoring:
      enabled: true
      lokiStack:
        enabled: false
      kubePrometheusStack:
        release:
          values:
            defaultRules:
              additionalRuleLabels:
                cluster: anish-monitoring-cluster
                env: dev

            alertmanager:
              enabled: true
              service:
                type: ClusterIP
              
              ingress:
                ingressClassName: nginx
                enabled: true
                hosts: 
                  - alertmanager.test.nubes.stfc.ac.uk
                paths:
                  - "/"
                tls: 
                  - hosts: 
                    - alertmanager.test.nubes.stfc.ac.uk
                    secretName: tls-keypair              
                ingressPerReplica:
                  enabled: false

              config:
                global:
                  resolve_timeout: 5m
                  smtp_smarthost: 
                  smtp_from:
                  smtp_require_tls: false

                route:
                  receiver: 'null'
                  routes:
                    - receiver: 'null'
                      matchers:
                      - alertname = "Watchdog"
                    - group_by: ['cluster', 'service']
                      group_wait: 30m
                      group_interval: 30m
                      repeat_interval: 2d
                      receiver: default-receiver
                      matchers:
                      - severity=~"critical|warning"

                inhibit_rules:
                  - source_matchers: [severity="critical"]
                    target_matchers: [severity="warning"]
                    equal: [alertname, cluster, service]

                  - source_matchers:
                      - 'severity = warning'
                    target_matchers:
                      - 'severity = info'
                    equal: [alertname, cluster, service]

                  - source_matchers:
                      - 'alertname = InfoInhibitor'
                    target_matchers:
                      - 'severity = info'
                    equal: ['namespace']

                  - target_matchers:
                      - 'alertname = InfoInhibitor'

                receivers:
                - name: 'null'
                - name: default-receiver
                  email_configs:
                  - to:
                    send_resolved: true
                    headers:
                      subject: |
                        {%- raw %}
                        "({{ .CommonLabels.env }} : {{ .CommonLabels.cluster }}) {{ .Status | toUpper }} {{ .CommonLabels.alertname }}"
                        {%- endraw %}
                    html: |-
                      {%- raw %}
                      <h3>You have the following alerts:</h3>
                      {{ range .Alerts }}
                      <p><b>{{.Labels.alertname}}</b>
                        <ul>{{ range .Annotations.SortedPairs }}
                        <li>{{ .Name }} = {{ .Value }}</li>
                        {{ end }}</ul>
                        <ul>{{ range .Labels.SortedPairs }}
                        <li>{{ .Name }} = {{ .Value }}</li>
                        {{ end }}</ul>
                        {{ .GeneratorURL }}</p>
                      {{ end }}
                      {%- endraw %}

                    text: |-
                      {%- raw %}
                      You have the following alerts:
                      {{ range .Alerts }}
                      * {{.Labels.alertname}}
                        {{ range .Annotations.SortedPairs }}
                        {{ .Name }} = {{ .Value }}
                        {{ end }}
                        {{ range .Labels.SortedPairs }}
                        {{ .Name }} = {{ .Value }}
                        {{ end }}
                        {{ .GeneratorURL }}
                      {{ end }}
                      {%- endraw %}

                templates:
                  - '/etc/alertmanager/config/*.tmpl'

              alertmanagerSpec:
                alertmanagerConfigMatcherStrategy: null
                alertmanagerConfigSelector: null
                # turn off persistent storage so cinder volume doesn't get created
                # TODO: remove this when cinder creation issue resolved          
                storage: 
                  emptyDir: 
                    medium: Memory


            grafana:
              enabled: true
              
              service:
                type: ClusterIP
              
              ingress:
                ingressClassName: nginx
                enabled: true
                path: /
                hosts: 
                  -  grafana.test.nubes.stfc.ac.uk
                tls:
                  - hosts: 
                    - "grafana.test.nubes.stfc.ac.uk"
                    secretName: tls-keypair


            prometheus-operator:
              enabled: true

            prometheus:
              enabled: true

              service:
                type: ClusterIP

              ingress:
                ingressClassName: nginx
                enabled: true
                paths:
                  - /
                hosts: 
                  -  prometheus.test.nubes.stfc.ac.uk
                tls: 
                  - hosts: 
                    - "prometheus.test.nubes.stfc.ac.uk"
                    secretName: tls-keypair
              
              prometheusSpec:
                # turn off persistent storage so cinder volume doesn't get created
                # need to debug cinder volume creation issue
                storageSpec: 
                  emptyDir: 
                    medium: Memory

            # TODO look into Thanos for multi-cluster monitoring
            # thanos service discovery on sidecar
            thanosService:
              enabled: false
                          
            # thanos scrape metrics on sidecar
            thanosServiceMonitor:
              enabled: false

            # thanos access on sidecar
            thanosServiceExternal:
              enabled: false