name: CI Copied Files Check

on:
  pull_request:
    branches:
      - main

jobs:
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  # Event `pull_request`: Compare the last commit of the main branch or last remote commit of the PR branch -> to the current commit of a PR branch.
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    outputs:
      check_result: ${{ steps.step1.outputs.result }}
    steps:
      - uses: actions/checkout@v4

      # - name: Get changed files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v45
      #   # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
      #   # with:
      #   #   since_last_remote_commit: true 

      # - name: List all changed files
      #   env:
      #     ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      #   run: |
      #     for file in ${ALL_CHANGED_FILES}; do
      #       echo "$file was changed"
      #     done

      # -----------------------------------------------------------------------------------------------------------
      # Example 2
      # -----------------------------------------------------------------------------------------------------------
      # - name: Get all copied files
      #   id: copied-files
      #   uses: tj-actions/changed-files@v45

      # - name: List all copied files
      #   if: steps.copied-files.outputs.any_changed == 'true'
      #   env:
      #     COPIED_FILES: ${{ steps.copied-files.outputs.copied_files }}
      #   run: |
      #     for file in ${ALL_CHANGED_FILES}; do
      #       echo "$file was changed"
      #     done



      - name: Get changed files in specific repo folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v45
        with:
          files: |
            - charts/staging/**
            - charts/prod/**
            - clusters/staging/**
            - clusters/prod/**
            - secrets/staging/**
            - secrets/prod**

      - name: Run step if any file(s) in the folder change
      - id: step1
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}
        run: |
          echo "One or more files in the folder has changed."
          echo "Files that have changed: $ALL_CHANGED_FILES" 
          for file in ${{ steps.changed-files-specific.outputs.all_changed_files }}; do
            if [[ ./PR_Check_Copy.sh $file == false ]]; then
              echo "result=false" >> "$GITHUB_OUTPUT"
              break;
            fi
          done

  comment_pr:
    needs: changed_files
    runs-on: ubuntu-latest
    steps:
      - env:
          resultjob1: ${{needs.changed_files.outputs.check_result}}
      - uses: actions/github-script@v7
        with:
          script: |
            if (resultjob1 != false) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'ðŸ‘‹ All files are an exact match to previous environment(s)'
              })
            }
